<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bold.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAZUlEQVQ4T2MYZoCVhfU/DvwBKJ0CxDxg
        hbgAKyurMbJGkBgzM7M7lA3CIEPwA3QDgIAZyYBHYBF8AN0AilyAhP8BpRYCsThYET6ArBHEp28YsLCw
        WKIbQJILkDWjYeLSwYgEDAwAOaY60e7vOSwAAAAASUVORK5CYII=
</value>
  </data>
  <data name="italic.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAXElEQVQ4T2MY/uA/Fkw8YGdnVwBSYI1A
        thJYkBTAxswWAqT+Q2myAMzZzGAeKQBmOysrawJEhHRAke2BQOo/CwtLJkSEBAANbbDtbGxsWmBBEgDM
        2eh4FOAEDAwAdsAZPWmZtUIAAAAASUVORK5CYII=
</value>
  </data>
  <data name="underline.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAoklEQVQ4T7WSAQ3CMBBFK2ESkIAEJCAB
        CThAAhKQMglIQMIkjHull5Vcf9Ys6Utelv5dL9duaRRz8ZZXGyr/42KuxStBQeUBunvhmaCg8sDT9MIa
        lQc4I0U8a1QeWEwKX3m1ofIARfjIqx+T6fmdQKFuuvsCeemFb5MmbPbxP+YubPQmtTRhwl04L+fntl0+
        4ckcC+dnxB6b+I/SY5MDE6T0BWBwSD0Wg/O4AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="strikeout.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAmElEQVQ4T92SbQ2DQBBET0IlIAUJlYAE
        HCABCUiphEpAQiXAvIQhG3rpwr+GSV4uuduPYZfy13qKt1g2PmISD5GKZCceGUSqWRCMg2YDB9y9RCp3
        o0DLhdQJunN+yQlX2VV7PENVTBnbnIDluA1/UlU8OjBOO27lZwGm7UCmTiIOvAHO9D9gTS4SccFUdOgF
        hcwocHc/lbIC9adLhmprZaAAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABIXAAASFwAAAAAAAAAA
        AACaPz8Amj8/AJo/PwCaPz8Amj8/AJo/PwCaPz8Amj8/AJo/PwCaPz8Amj8/F5o/P1eaPz+Wmj8/w5o/
        P92aPz/qnEBA6pI9PdsqHiLeFxgg7BoZH+waGR/sGhkf7BoZH+waGR/sGhkf7BoZH+waGR/sGhkf7BoZ
        H+waGR/sGhkfuZo/PwCaPz8Amj8/AJo/PwCaPz8Amj8/AJo/PwCaPz8Amj8/LJo/P5iaPz/qmj89/5o9
        Ov+bOzT/mzky/5s4MP+fOTL/hTMu/xsZH/8UFBv/DQwS/w8NFP8YFx3/FhQb/xEQFv8ZGB7/FxYc/xEQ
        Fv8REBb/EA4V/xQTGf8bGiD0mj8/AJo/PwCaPz8Amj8/AJo/PwCaPz8Amj8/C5o/P4iaPz/1mj48/5s5
        Mv+bOzb/mEdS/5RXdf+SZJD/kGqf/5RsoP9+V37/GRYc/zQzOf91dXj/Z2Zr/yAfJf8zMjj/SklO/yIh
        J/8zMjj/S0pO/1FQVP9bWl7/NzY8/xYUG+yaPz8Amj8/AJo/PwCaPz8Amj8/AJo/PyiaPz/Jmj8//5s7
        NP+aPj7/kmCI/4mG1/+Dm///gaP//4Cn//+Ap///g6v//2+O9P8WFh3/q6qq/5OSlf+fnaD/uLi6/2tr
        bv/BwMP/CgkP/1lXXP//////ycnL/7a0t/+7u73/ERAW7Jo/PwCaPz8Amj8/AJo/PwCaPz81mj8/5Zo/
        P/+bOTL/lVBo/4iM5v+Ap///gKf//4Gj//+Cof//gqH//4Kh//+Fpf//cIvs/xsaI/8qKS3/SklO/3V0
        eP/Qz9H/YWBk/769wP9XV1r/NDM5//Hx8//CwsT/iYmM/z8+Qv8bGiDsmj8/AJo/PwCaPz8Amj8/J5o/
        P+eaPz//mzkz/5RXeP+Dnv//gKf//4Kh//+Cof//gqH//4Kh//+Cof//gqH//4Wl//9wi+z/Dw0X/29t
        cP/a2dr/fX2A/z08QP9NS1H/wsLE/0hGS/8zMjj/8O/w/8TExv+amZz/ISAm/xgXHeyaPz8Amj8/AJo/
        PwuaPz/Nmj8//5s9OP+YSVT/g5n//4Cl//+Cof//gqH//4Kh//+Cof//gqH//4Kh//+Cof//haX//3CL
        7P8XFh3/NjU4/7S0tv+srK3/cG5z/1xbX/+1tbf/YF9j/3l4fP/6+vr/xcTG/76+wP+Uk5b/CwoS7Jo/
        PwCaPz8Amj8/ipo/P/+aPz//mzkw/410sv+Aqf//gqH//4Kh//+Cof//gqH//4Kh//+Cof//gqH//4Kh
        //+Fpf//cIvs/xwcJP8SERb/Hx4k/0JBRf8nJyv/IyIo/ycmLP8uLTP/NTQ4/0ZFSv9LSk7/UlJX/zAu
        NP8XFhzsmj8/AJo/PyqaPz/4mj8//5o+Pv+aPTr/h4vm/4Cl//+Cof//gqH//4Wl//+Fpf//gqH//4Kh
        //+Cof//gqH//4Wl//9viur/FxYX/xYUFP8YFx3/ExEW/xQSFP8UEhX/ExES/xMSF/8SFBv/ERAW/xIR
        F/8REBb/FhQb/xsaIOyaPz8Amj8/nJo/P/+aPz//mj4+/5o9O/+Hjen/gKX//4Kh//+Gp///dZL7/3KO
        9f+Gpf//gqH//4Kh//+Cof//hKP//3ua//84QWf/LTJK/xkaI/8hIzT/LzVQ/yswSf8rMUr/LSw//ygc
        If8UFx7/Ghkf/xoZH/8aGR//Ghkf7Jo/PxeaPz/vmj8//5o/P/+aPz//mzky/4x6v/+Aqf//h6j//2N8
        1v8EBhH/AQIH/1Vruf+Hqf//gqH//4Kh//+Cof//g6P//4mq//9KXaL/AAAC/wUHFf9ogt//hKP//36l
        //+NcKz/ljcv/00oK/8SFx3/FRge/xcYHv8XGB7ymj8/Wpo/P/+aPz//mj8//5o/P/+bPDf/lk9k/4Kf
        //+Jr///NEN4/wAAAP8AAAD/ISpP/4iq//+Cof//gqH//4Kh//+Cof//h6n//xUeOv8AAAD/AAAA/0FT
        lP+Ksf//hJ3//5lLW/+ePTr/n0BA/14tMP8pHiL/LB4k/y0eJLuaPz+bmj8//5o/P/+aPz//mj8//5o/
        P/+bOTL/kWSS/4Wr//9kgdz/BAYS/wICCP9Va7r/h6n//4Kh//+Cof//gqH//4Kh//+Iqf//TWGp/wEB
        Bf8HCxz/aorr/4ao//+TXoT/mzky/5o/P/+bPz//n0BA/5Y+Pv+VPj7/lj4+iZo/P8eaPz//mj8//5o/
        P/+aPz//mj8//5o/P/+bOTL/k16E/4ac//96nP//dZT//4an//+Cof//gqH//4Kh//+Cof//gqH//4Kh
        //+Gp///dJP8/3uf//+Hmfz/k1l6/5s5MP+aPz//mj8//5o/P/+aPz//nD8//5w/P/+cPz++mj8/35o/
        P/+aPz//mj8//5o/P/+aPz//mj8//5o/P/+gPTX/ZiMu/1ZQjv90h+r/d5X//32f//+Fq///hqv//4ar
        //+Fqv//fJ7//3aU//9zheb/U0qC/2wmLP+gPTb/mj8//5o/P/+aPz//mj8//5o/P/+aPz//mj8//5o/
        P9eaPz/rmj8//5o/P/+aPz//mj8//5o/P/+VNjb/lTQ0/6BCQv9fExD/GgAA/04gJf+Rg5z/iYS0/1lS
        kf9gX6X/X16k/1pTkv+MiLb/j3+X/0gXGP8bAAD/aBoZ/59CQv+UNDT/ljY2/5pAQP+aPz//mj8//5o/
        P/+aPz//mj8/4po/P+uaPz//mj8//5o/P/+aPz//mj4+/8ucnP+9hIT/nj8//1cJCf9aNTX/8u7s////
        /////vf/n4R9/yIAAP8lAAD/rpWO////+///////7Obk/04nJ/9gEBD/oEJC/8GJif/Hlpb/mDs7/5o/
        P/+aPz//mj8//5o/P/+aPz/imj8/35o/P/+aPz//mj8//5o/P/+VNDT/3sHB///////btLT/UwMD/7Gf
        n//59/f/9fPz//b09P/y7u7/QQwM/08eHv/39fX/9vT0//Xz8//6+Pj/oIuL/1sJCf/hwMD//////9az
        s/+UMzP/mj8//5o/P/+aPz//mj8//5o/P9eaPz/Hmj8//5o/P/+aPz//mj8//5c5Of+mVlb/9enn////
        //+BS0b/OwYD/0sNCP9LDQj/Sw0I/0wOCf83AAD/OgAA/0wOCf9LDQj/Sw0I/0sNCP84BQL/kFtY////
        ///w4N//ok9P/5g7O/+aPz//mj8//5o/P/+aPz//mj8/vpo/P5qaPz//mj8//5o/P/+aPz//m0BA/545
        Nv+dUFT/qJis/1pmf/8LJkD/FCE7/xQhO/8UITv/FCE7/xkoQv8YJ0H/FCE7/xQhO/8UITv/FCE7/wwk
        Pv9lg5z/qLHD/5xPUv+eNTD/mj8//5o/P/+aPz//mj8//5o/P/+aPz+Qmj8/Wpo/P/+aPz//mj8//5o/
        P/+hQT7/YTBJ/wgSTv8AAUL/AFCV/wCK0P8AhMn/AITJ/wCEyf8AhMn/AITJ/wCEyf8AhMn/AITJ/wCE
        yf8AhMn/AITJ/wB+xP8Adbn/AHKs/2hTav+hPDn/mj8//5o/P/+aPz//mj8//5o/P1CaPz8Wmj8/75o/
        P/+aPz//okE8/14uSv8AEFf/ABBW/wALT/8AUZT/AITG/wB+wP8AfsD/AH7A/wB+wP8AfsD/AH7A/wB+
        wP8AfsD/AH7A/wB+wP8AfsD/AH7A/wB+wP8AgMb/AIDF/2hTaf+hPDf/mj8//5o/P/+aPz/pmj8/EZo/
        PwCaPz+cmj8//51APv+NPEL/AhZU/wARVv8AElb/AAtP/wBRlP8AhMb/AH7A/wB+wP8AfsD/AH7A/wB+
        wP8AfsD/AH7A/wB+wP8AfsD/AH7A/wB+wP8AfsD/AH7A/wB+wP8AgMX/AHex/5RBRf+cPj7/mj8//5o/
        P5GaPz8Amj8/AJo/PymaPz/4okE8/2MwSf8AEFf/ABJW/wARVv8AB0//AFKZ/wCIzv8Agsj/AILI/wCC
        yP8Agsj/AILI/wCCyP8Agsj/AIHH/wCAw/8AfsD/AH7A/wB+wP8AfsD/AH7A/wB+wP8Agcb/bVFl/6E8
        Of+aPz/0mj8/Ipo/PwCaPz8Amj8/AJo/P4mjQTz/UStM/wAQV/8AEFf/CRdU/zYfS/9DSW//QGWM/0Bi
        h/9AYof/QGKH/0Bih/9AYof/QGKH/0Bih/8wZ5L/AHez/wCBx/8AfsH/AH7A/wB+wP8AfsD/AH7A/wCB
        x/9cV3P/ojw3/5o/P3+aPz8Amj8/AJo/PwCaPz8Amj8/CqJBPMxgLkr/AA1X/0QnTv+UPUH/o0I+/6M+
        Of+jOzb/ozs3/6M7N/+jOzf/ozs3/6M7N/+jOzf/ozs2/6M8N/+UQUT/RGGG/wCAw/8AfsH/AH7A/wB+
        wP8AfsD/AIHG/2pSZ/+hPDfFmj8/B5o/PwCaPz8Amj8/AJo/PwCaPz8AnUA+JoM4Q+ZPKkz/okE+/51A
        Pv+aPz//mj8//5o/P/+aPz//mj8//5o/P/+aPz//mj8//5o/P/+aPz//mj8//50+O/+lOTX/RGGF/wCB
        x/8AfsD/AH7A/wCAxf8AebX/j0NI4J0+PCCaPz8Amj8/AJo/PwCaPz8Amj8/AJo/PwCaPz8Amz8/NJ9A
        PuSbPz//mj8//5o/P/+aPz//mj8//5o/P/+aPz//mj8//5o/P/+aPz//mj8//5o/P/+aPz//mj8//54+
        PP+VQUP/AHew/wCAw/8AgMP/AIHI/11XcuCiPDcumj8/AJo/PwCaPz8Amj8/AJo/PwCaPz8Amj8/AJo/
        PwCaPz8Amj8/J5o/P8iaPz//mj8//5o/P/+aPz//mj8//5o/P/+aPz//mj8//5o/P/+aPz//mj8//5o/
        P/+aPz//mj8//6M7Nv8vZ5P/AIXP/wB6uP9bV3PDoD04Ipo/PwCaPz8Amj8/AJo/PwCaPz8Amj8/AJo/
        PwCaPz8Amj8/AJo/PwCaPz8Amj8/Cpo/P4eaPz/1mj8//5o/P/+aPz//mj8//5o/P/+aPz//mj8//5o/
        P/+aPz//mj8//5o/P/+aPz//nj07/3VOX/9hVnHyjERKgaI8NwibPz8Amj8/AJo/PwCaPz8Amj8/AJo/
        PwCaPz8Amj8/AJo/PwCaPz8Amj8/AJo/PwCaPz8Amj8/AJo/PyuaPz+Xmj8/6Zo/P/+aPz//mj8//5o/
        P/+aPz//mj8//5o/P/+aPz//mj8//5o/P/+ZPz/nnz06k6I8NyedPjwAmj8/AJo/PwCaPz8Amj8/AJo/
        PwCaPz8Amj8/AJo/PwCaPz8Amj8/AJo/PwCaPz8Amj8/AJo/PwCaPz8Amj8/AJo/PwCaPz8Wmj8/Vpo/
        P5SaPz/Cmj8/3Zo/P+qaPz/qmj8/3Jo/P8CaPz+Smj8/U5o/PxSaPz8Amj8/AJo/PwCaPz8Amj8/AJo/
        PwCaPz8Amj8/AJo/PwCaPz8A/8AAAP8AAAD8AAAA+AAAAPAAAADgAAAAwAAAAMAAAACAAAAAgAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGAAAABwAAAA8AA
        AAPgAAAH8AAAD/gAAB/8AAA//wAA///AA/8=
</value>
  </data>
</root>