<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bold.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAZUlEQVQ4T2MYZoCVhfU/DvwBKJ0CxDxg
        hbgAKyurMbJGkBgzM7M7lA3CIEPwA3QDgIAZyYBHYBF8AN0AilyAhP8BpRYCsThYET6ArBHEp28YsLCw
        WKIbQJILkDWjYeLSwYgEDAwAOaY60e7vOSwAAAAASUVORK5CYII=
</value>
  </data>
  <data name="italic.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAXElEQVQ4T2MY/uA/Fkw8YGdnVwBSYI1A
        thJYkBTAxswWAqT+Q2myAMzZzGAeKQBmOysrawJEhHRAke2BQOo/CwtLJkSEBAANbbDtbGxsWmBBEgDM
        2eh4FOAEDAwAdsAZPWmZtUIAAAAASUVORK5CYII=
</value>
  </data>
  <data name="underline.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAoklEQVQ4T7WSAQ3CMBBFK2ESkIAEJCAB
        CThAAhKQMglIQMIkjHull5Vcf9Ys6Utelv5dL9duaRRz8ZZXGyr/42KuxStBQeUBunvhmaCg8sDT9MIa
        lQc4I0U8a1QeWEwKX3m1ofIARfjIqx+T6fmdQKFuuvsCeemFb5MmbPbxP+YubPQmtTRhwl04L+fntl0+
        4ckcC+dnxB6b+I/SY5MDE6T0BWBwSD0Wg/O4AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="strikeout.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAmElEQVQ4T92SbQ2DQBBET0IlIAUJlYAE
        HCABCUiphEpAQiXAvIQhG3rpwr+GSV4uuduPYZfy13qKt1g2PmISD5GKZCceGUSqWRCMg2YDB9y9RCp3
        o0DLhdQJunN+yQlX2VV7PENVTBnbnIDluA1/UlU8OjBOO27lZwGm7UCmTiIOvAHO9D9gTS4SccFUdOgF
        hcwocHc/lbIC9adLhmprZaAAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABALAAAQCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIKg
        +ieCoPp3gqD6s4Kg+txLV4H1IB8j/SAfI/0gHyP9IB8j/SAfI/0gHyP9IB8j/SAfI/0gHyP9IB8j/SAf
        I/0gHyP4IB8jQwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIKg
        +jmCoPq9gqD6/4Kg+v+CoPr/gqD6/zxEYf8gHyP/IB8j/yAfI/8gHyP/IB8j/yAfI/8gHyP/Kyou/2Ni
        Zf80Mzb/IB8j/yAfI/8gHyNpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIKg
        +gOCoPqMgqD6/oKg+v+CoPr/gqD6/4Kg+v+CoPr/PERh/yUkKP+FhIb/lJOV/09OUf9FREj/VFNW/yAf
        I/+Tk5X/gYGD/z8+Qf83Njr/IB8j/yAfI2kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACCoPoBgqD6ooKg+v+CoPr/gqD6/4Kg+v+CoPr/gqD6/4Kg+v88RGH/Pz9C/3l4e/9KSk3/0dHS/1RT
        Vv9qaWz/KCcr/4OChf9VVFf/IB8j/0FAQ/8iISX/IB8jaQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIKg+mOCoPr/gqD6/4Kg+v+CoPr/gqD6/4Kg+v+CoPr/gqD6/zxEYf8gHyP/h4aI/7a1
        t/+zs7T/R0ZJ/4qKjP9hYGP/Jycq/46Nj/8pKCv/IiEl/zQ0N/8gHyNpAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACCoPoBgqD634Kg+v+CoPr/gqD6/4Kg+v+CoPr/gqD6/4Kg+v+CoPr/PERh/yAf
        I/+6urv/cnF0/2NiZf9FRUj/a2pt/z08P/8gHyP/rq6v/2tqbf8sKy//IB8j/yAfI2kAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIKg+iSCoPr/gqD6/4Kg+v+CoPr/gqD6/4Kg+v+CoPr/gqD6/4Kg
        +v88RGH/IB8j/yopLf9wb3L/UFBT/z4+Qf9TUlX/TUxP/zAvMv/Ly8z/Pz5C/zIxNf8gHyP/IB8jaQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgqD6MoKg+v+CoPr/gqD6/4Kg+v+CoPr/gqD6/4Kg
        +v+CoPr/gqD6/zxEYf8gHyP/IB8j/yAfI/8gHyP/IB8j/yAfI/8gHyP/IB8j/2RjZv9YV1r/QD9D/yAf
        I/8gHyNpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACCoPoQgqD6/IKg+v+CoPr/d5Ll/ygx
        TP8cIjb/Y3q+/4Kg+v+CoPr/QElo/yAfI/8gHyP/IB8j/yAfI/8gHyP/IB8j/yAfI/8gHyP/IB8j/ycm
        Kv8uLTH/IB8j/yAfI2kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACCoPqxgqD6/4Kg
        +v86R2//AAAA/wAAAP8UGSf/gqD6/4Kg+v94kuP/YXWy/2F1sv9hdbL/YXWy/xMVHP8LCgz/CwoM/yAj
        MP8hISb/IB8j/yAfI/8gHyP/IB8jaQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIKg
        +iaCoPrygqD6/zxKc/8AAAD/AAAA/xYbK/+CoPr/gqD6/4Kg+v+CoPr/gqD6/4Kg+v+CoPr/Fhsq/wAA
        AP8AAAD/PEp0/2V6u/8lJS7/IB8j/yAfI/8gHyNdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIKg+kOCoPryeZXp/y85Wv8jK0P/Z3/H/4Kg+v+CoPr/gqD6/4Kg+v+CoPr/gqD6/4Kg
        +v9nf8b/IytD/y86Wv95lur/gqD68mBzr1kgHyNDIB8jPiAfIwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIKg+il7kuTagqD6/4Kg+v+CoPr/gqD6/4Kg+v+CoPr/gqD6/4Kg
        +v+CoPr/gqD6/4Kg+v+CoPr/gqD6/3uS5NmCoPooAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMBAqRKMUz/a3Kz/4Cd9f+CoPr/gqD6/4Kg
        +v+CoPr/gqD6/4Kg+v+CoPr/gJ31/2tysv9KMUz/MgECogAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMgAApDIAAP9DFRX/h21y/5KI
        oP9eUHf/XFSD/15Zi/9cVIP/XlF3/5OIoP+HbXH/QxUV/zIAAP8yAACiAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///x3///99////JAAAAAAyAACkUCUl/+7q
        6v///////////+DZ2f9AEhL/MgAA/0ETE//h2tr////////////u6en/TyUl/zIAAKIAAAAA////JP//
        /33///8dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////EP////n////4////UjIA
        AKSxnp7//////////////////////5R6ev8yAAD/lXt7//////////////////////+wnZ3/MgAAov//
        /1H////4////+v///xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////jv//
        ///////wQxYWs142Nv9sSUn/bElJ/2xJSf9sSUn/VSws/zIAAP9WLCz/bElJ/2xJSf9sSUn/bElJ/102
        Nv9DFRWx////8P////////+OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8D////hP///+90UlLyMgAA/zIAAP8yAAD/MgAA/zIAAP8yAAD/MgAA/zIAAP8yAAD/MgAA/zIA
        AP8yAAD/MgAA/3RTU/D////w////hP///wQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAZSyEAGUuWAxtN3Qdaif4DdaT+A3Wk/gN1pP4DdaT+A3Wk/gN1pP4DdaT+A3Wk/gN1
        pP4DdaT+A3Wk/gN1pP4DdaT+B3uq/gN+sN0Afa+WAH2vIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAGUtIABlL8wAZS/8AGUv/AFqM/wB9r/8Afa//AH2v/wB9r/8Afa//AH2v/wB9
        r/8Afa//AH2v/wB9r/8Afa//AH2v/wB9r/8Afa//AH2v/wB9r/8Afa/zAH2vSAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAABlLGQAZS/MAGUv/ABlL/wAZS/8AWoz/AH2v/wB9r/8Afa//AH2v/wB9
        r/8Afa//AH2v/wB9r/8Afa//AH2v/wB9r/8Afa//AH2v/wB9r/8Afa//AH2v/wB9r/8Afa/zAH2vIgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGUuWABlL/wAZS/8AGUv/ABlL/wBajP8Afa//AH2v/wB9
        r/8Afa//AH2v/wB9r/8Afa//AH2v/wB9r/8Afa//AH2v/wB9r/8Afa//AH2v/wB9r/8Afa//AH2v/wB9
        r/8Afa+bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZS+QAGUv/ABlL/wAZS/8AGUv/AFqM/wB9
        r/8Afa//AH2v/wB9r/8Afa//AH2v/wB9r/8Afa//AH2v/wB9r/8Afa//AH2v/wB9r/8Afa//AH2v/wB9
        r/8Afa//AH2v/wB9r+UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABlL/AAZS/8AGUv/ABlL3QAZ
        S5kAWoyIAH2viAB9r4gAfa+IAH2viAB9r4gAfa+IAH2viAB9r4gAfa+LAH2vrwB9r/UAfa//AH2v/wB9
        r/8Afa//AH2v/wB9r/8Afa//AH2v/QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGUvmABlL9AAZ
        S2EAGUsCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH2vFAB9
        r6UAfa//AH2v/wB9r/8Afa//AH2v/wB9r/8Afa/oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZ
        S5wAGUtEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAH2vAQB9r58Afa//AH2v/wB9r/8Afa//AH2v/wB9r6IAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAABlLCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAH2vDQB9r+sAfa//AH2v/wB9r/8Afa/3AH2vKQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH2vlAB9r/8Afa//AH2v+AB9r1UAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfa9lAH2v6wB9r6YAfa8sAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////wAAP/wAAD/wAAA/4AAAP+AAAD/AAAA/wAAAP8AAAD/AA
        AA/4AAAP+AAAD/wAAA/+AAD//wAB//8AAf/xAAEf8AAAH/gAAD/4AAA/+AAAP/AAAB/gAAAP4AAAD+AA
        AA/gAAAP4f/gD+f/8A/v//gP///8H////D8=
</value>
  </data>
</root>